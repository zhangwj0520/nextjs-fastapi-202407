// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from '@hey-api/client-fetch';
import type { LoginFormApiLoginFormPostData, LoginFormApiLoginFormPostError, LoginFormApiLoginFormPostResponse, LoginApiLoginPostData, LoginApiLoginPostError, LoginApiLoginPostResponse, ReadUsersMeApiUserMeGetError, ReadUsersMeApiUserMeGetResponse, ReadOwnItemsApiUserMeItemsGetError, ReadOwnItemsApiUserMeItemsGetResponse, ListUsersApiUserGetData, ListUsersApiUserGetError, ListUsersApiUserGetResponse, CreateUserApiUserPostData, CreateUserApiUserPostError, CreateUserApiUserPostResponse, GetUserApiUserUserIdGetData, GetUserApiUserUserIdGetError, GetUserApiUserUserIdGetResponse, UpdateUserApiUserUserIdPutData, UpdateUserApiUserUserIdPutError, UpdateUserApiUserUserIdPutResponse, DeleteUserApiUserUserIdDeleteData, DeleteUserApiUserUserIdDeleteError, DeleteUserApiUserUserIdDeleteResponse, RootApiStreamGetError, RootApiStreamGetResponse } from './types.gen';

export class LoginService {
    /**
     * Loginform
     */
    public static loginFormApiLoginFormPost(options: Options<LoginFormApiLoginFormPostData>) {
        return (options?.client ?? client).post<LoginFormApiLoginFormPostResponse, LoginFormApiLoginFormPostError>({
            ...options,
            url: '/api/login-form'
        });
    }
    
    /**
     * Login
     */
    public static loginApiLoginPost(options: Options<LoginApiLoginPostData>) {
        return (options?.client ?? client).post<LoginApiLoginPostResponse, LoginApiLoginPostError>({
            ...options,
            url: '/api/login'
        });
    }
    
}

export class UserService {
    /**
     * Read Users Me
     */
    public static readUsersMeApiUserMeGet(options?: Options) {
        return (options?.client ?? client).get<ReadUsersMeApiUserMeGetResponse, ReadUsersMeApiUserMeGetError>({
            ...options,
            url: '/api/user/me'
        });
    }
    
    /**
     * Read Own Items
     */
    public static readOwnItemsApiUserMeItemsGet(options?: Options) {
        return (options?.client ?? client).get<ReadOwnItemsApiUserMeItemsGetResponse, ReadOwnItemsApiUserMeItemsGetError>({
            ...options,
            url: '/api/user/me/items'
        });
    }
    
    /**
     * List Users
     */
    public static listUsersApiUserGet(options?: Options<ListUsersApiUserGetData>) {
        return (options?.client ?? client).get<ListUsersApiUserGetResponse, ListUsersApiUserGetError>({
            ...options,
            url: '/api/user'
        });
    }
    
    /**
     * Create User
     */
    public static createUserApiUserPost(options: Options<CreateUserApiUserPostData>) {
        return (options?.client ?? client).post<CreateUserApiUserPostResponse, CreateUserApiUserPostError>({
            ...options,
            url: '/api/user'
        });
    }
    
    /**
     * Get User
     */
    public static getUserApiUserUserIdGet(options: Options<GetUserApiUserUserIdGetData>) {
        return (options?.client ?? client).get<GetUserApiUserUserIdGetResponse, GetUserApiUserUserIdGetError>({
            ...options,
            url: '/api/user/{user_id}'
        });
    }
    
    /**
     * Update User
     */
    public static updateUserApiUserUserIdPut(options: Options<UpdateUserApiUserUserIdPutData>) {
        return (options?.client ?? client).put<UpdateUserApiUserUserIdPutResponse, UpdateUserApiUserUserIdPutError>({
            ...options,
            url: '/api/user/{user_id}'
        });
    }
    
    /**
     * Delete User
     */
    public static deleteUserApiUserUserIdDelete(options: Options<DeleteUserApiUserUserIdDeleteData>) {
        return (options?.client ?? client).delete<DeleteUserApiUserUserIdDeleteResponse, DeleteUserApiUserUserIdDeleteError>({
            ...options,
            url: '/api/user/{user_id}'
        });
    }
    
}

export class StreamService {
    /**
     * Root
     */
    public static rootApiStreamGet(options?: Options) {
        return (options?.client ?? client).get<RootApiStreamGetResponse, RootApiStreamGetError>({
            ...options,
            url: '/api/stream'
        });
    }
    
}