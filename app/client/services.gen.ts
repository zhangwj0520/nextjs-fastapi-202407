// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from '@hey-api/client-fetch';
import type { LoginFormApiLoginFormPostData, LoginFormApiLoginFormPostError, LoginFormApiLoginFormPostResponse, LoginApiLoginPostData, LoginApiLoginPostError, LoginApiLoginPostResponse, ReadUsersMeApiUserMeGetError, ReadUsersMeApiUserMeGetResponse, ReadOwnItemsApiUserMeItemsGetError, ReadOwnItemsApiUserMeItemsGetResponse, ListUsersApiUserGetData, ListUsersApiUserGetError, ListUsersApiUserGetResponse, CreateUserApiUserPostData, CreateUserApiUserPostError, CreateUserApiUserPostResponse, GetUserApiUserUserIdGetData, GetUserApiUserUserIdGetError, GetUserApiUserUserIdGetResponse, UpdateUserApiUserUserIdPutData, UpdateUserApiUserUserIdPutError, UpdateUserApiUserUserIdPutResponse, DeleteUserApiUserUserIdDeleteData, DeleteUserApiUserUserIdDeleteError, DeleteUserApiUserUserIdDeleteResponse, RootApiStreamGetError, RootApiStreamGetResponse, ReadRootApiDemoGetError, ReadRootApiDemoGetResponse, ReadItemApiDemoItemsItemIdGetData, ReadItemApiDemoItemsItemIdGetError, ReadItemApiDemoItemsItemIdGetResponse, UpdateItem12ApiDemoItemsItemIdPutData, UpdateItem12ApiDemoItemsItemIdPutError, UpdateItem12ApiDemoItemsItemIdPutResponse, CreateItemApiDemoItemsPostData, CreateItemApiDemoItemsPostError, CreateItemApiDemoItemsPostResponse, UpdateItemApiDemoItems2ItemIdPutData, UpdateItemApiDemoItems2ItemIdPutError, UpdateItemApiDemoItems2ItemIdPutResponse, ReadItemsApiDemoItems3QueryGetData, ReadItemsApiDemoItems3QueryGetError, ReadItemsApiDemoItems3QueryGetResponse, ReadItems2ApiDemoItems3DefaultGetData, ReadItems2ApiDemoItems3DefaultGetError, ReadItems2ApiDemoItems3DefaultGetResponse, ReadItemsDepApiDemoDepGetData, ReadItemsDepApiDemoDepGetError, ReadItemsDepApiDemoDepGetResponse, ReadItemsDep22ApiDemoDep2GetData, ReadItemsDep22ApiDemoDep2GetError, ReadItemsDep22ApiDemoDep2GetResponse, ListUsersApiPrismaUserGetData, ListUsersApiPrismaUserGetError, ListUsersApiPrismaUserGetResponse, CreateUserApiPrismaUserPostData, CreateUserApiPrismaUserPostError, CreateUserApiPrismaUserPostResponse, UpdateUserByidApiPrismaUserPutData, UpdateUserByidApiPrismaUserPutError, UpdateUserByidApiPrismaUserPutResponse, GetUserApiPrismaUserUserIdGetData, GetUserApiPrismaUserUserIdGetError, GetUserApiPrismaUserUserIdGetResponse, UpdateUserApiPrismaUserUserIdPutData, UpdateUserApiPrismaUserUserIdPutError, UpdateUserApiPrismaUserUserIdPutResponse, DeleteUserApiPrismaUserUserIdDeleteData, DeleteUserApiPrismaUserUserIdDeleteError, DeleteUserApiPrismaUserUserIdDeleteResponse } from './types.gen';

export class LoginService {
    /**
     * Loginform
     */
    public static loginFormApiLoginFormPost(options: Options<LoginFormApiLoginFormPostData>) {
        return (options?.client ?? client).post<LoginFormApiLoginFormPostResponse, LoginFormApiLoginFormPostError>({
            ...options,
            url: '/api/login-form'
        });
    }
    
    /**
     * Login
     */
    public static loginApiLoginPost(options: Options<LoginApiLoginPostData>) {
        return (options?.client ?? client).post<LoginApiLoginPostResponse, LoginApiLoginPostError>({
            ...options,
            url: '/api/login'
        });
    }
    
}

export class UserService {
    /**
     * Read Users Me
     */
    public static readUsersMeApiUserMeGet(options?: Options) {
        return (options?.client ?? client).get<ReadUsersMeApiUserMeGetResponse, ReadUsersMeApiUserMeGetError>({
            ...options,
            url: '/api/user/me'
        });
    }
    
    /**
     * Read Own Items
     */
    public static readOwnItemsApiUserMeItemsGet(options?: Options) {
        return (options?.client ?? client).get<ReadOwnItemsApiUserMeItemsGetResponse, ReadOwnItemsApiUserMeItemsGetError>({
            ...options,
            url: '/api/user/me/items'
        });
    }
    
    /**
     * List Users
     */
    public static listUsersApiUserGet(options?: Options<ListUsersApiUserGetData>) {
        return (options?.client ?? client).get<ListUsersApiUserGetResponse, ListUsersApiUserGetError>({
            ...options,
            url: '/api/user'
        });
    }
    
    /**
     * Create User
     */
    public static createUserApiUserPost(options: Options<CreateUserApiUserPostData>) {
        return (options?.client ?? client).post<CreateUserApiUserPostResponse, CreateUserApiUserPostError>({
            ...options,
            url: '/api/user'
        });
    }
    
    /**
     * Get User
     */
    public static getUserApiUserUserIdGet(options: Options<GetUserApiUserUserIdGetData>) {
        return (options?.client ?? client).get<GetUserApiUserUserIdGetResponse, GetUserApiUserUserIdGetError>({
            ...options,
            url: '/api/user/{user_id}'
        });
    }
    
    /**
     * Update User
     */
    public static updateUserApiUserUserIdPut(options: Options<UpdateUserApiUserUserIdPutData>) {
        return (options?.client ?? client).put<UpdateUserApiUserUserIdPutResponse, UpdateUserApiUserUserIdPutError>({
            ...options,
            url: '/api/user/{user_id}'
        });
    }
    
    /**
     * Delete User
     */
    public static deleteUserApiUserUserIdDelete(options: Options<DeleteUserApiUserUserIdDeleteData>) {
        return (options?.client ?? client).delete<DeleteUserApiUserUserIdDeleteResponse, DeleteUserApiUserUserIdDeleteError>({
            ...options,
            url: '/api/user/{user_id}'
        });
    }
    
}

export class StreamService {
    /**
     * Root
     */
    public static rootApiStreamGet(options?: Options) {
        return (options?.client ?? client).get<RootApiStreamGetResponse, RootApiStreamGetError>({
            ...options,
            url: '/api/stream'
        });
    }
    
}

export class DemoService {
    /**
     * Read Root
     */
    public static readRootApiDemoGet(options?: Options) {
        return (options?.client ?? client).get<ReadRootApiDemoGetResponse, ReadRootApiDemoGetError>({
            ...options,
            url: '/api/demo'
        });
    }
    
    /**
     * Read Item
     */
    public static readItemApiDemoItemsItemIdGet(options: Options<ReadItemApiDemoItemsItemIdGetData>) {
        return (options?.client ?? client).get<ReadItemApiDemoItemsItemIdGetResponse, ReadItemApiDemoItemsItemIdGetError>({
            ...options,
            url: '/api/demo/items/{item_id}'
        });
    }
    
    /**
     * Update Item12
     */
    public static updateItem12ApiDemoItemsItemIdPut(options: Options<UpdateItem12ApiDemoItemsItemIdPutData>) {
        return (options?.client ?? client).put<UpdateItem12ApiDemoItemsItemIdPutResponse, UpdateItem12ApiDemoItemsItemIdPutError>({
            ...options,
            url: '/api/demo/items/{item_id}'
        });
    }
    
    /**
     * Create Item
     */
    public static createItemApiDemoItemsPost(options: Options<CreateItemApiDemoItemsPostData>) {
        return (options?.client ?? client).post<CreateItemApiDemoItemsPostResponse, CreateItemApiDemoItemsPostError>({
            ...options,
            url: '/api/demo/items'
        });
    }
    
    /**
     * Update Item
     */
    public static updateItemApiDemoItems2ItemIdPut(options: Options<UpdateItemApiDemoItems2ItemIdPutData>) {
        return (options?.client ?? client).put<UpdateItemApiDemoItems2ItemIdPutResponse, UpdateItemApiDemoItems2ItemIdPutError>({
            ...options,
            url: '/api/demo/items2/{item_id}'
        });
    }
    
    /**
     * Read Items
     */
    public static readItemsApiDemoItems3QueryGet(options?: Options<ReadItemsApiDemoItems3QueryGetData>) {
        return (options?.client ?? client).get<ReadItemsApiDemoItems3QueryGetResponse, ReadItemsApiDemoItems3QueryGetError>({
            ...options,
            url: '/api/demo/items3/query'
        });
    }
    
    /**
     * Read Items2
     */
    public static readItems2ApiDemoItems3DefaultGet(options: Options<ReadItems2ApiDemoItems3DefaultGetData>) {
        return (options?.client ?? client).get<ReadItems2ApiDemoItems3DefaultGetResponse, ReadItems2ApiDemoItems3DefaultGetError>({
            ...options,
            url: '/api/demo/items3/default'
        });
    }
    
    /**
     * Read Items Dep
     */
    public static readItemsDepApiDemoDepGet(options?: Options<ReadItemsDepApiDemoDepGetData>) {
        return (options?.client ?? client).get<ReadItemsDepApiDemoDepGetResponse, ReadItemsDepApiDemoDepGetError>({
            ...options,
            url: '/api/demo/dep/'
        });
    }
    
    /**
     * Read Items Dep22
     */
    public static readItemsDep22ApiDemoDep2Get(options: Options<ReadItemsDep22ApiDemoDep2GetData>) {
        return (options?.client ?? client).get<ReadItemsDep22ApiDemoDep2GetResponse, ReadItemsDep22ApiDemoDep2GetError>({
            ...options,
            url: '/api/demo/dep2/'
        });
    }
    
}

export class PrismaService {
    /**
     * List Users
     * This endpoint returns a list of users with specified number of records (`take` parameter).
     *
     * :param take: The number of user records to return. Defaults to `10`.
     * :type take: int
     *
     * :return: A list of UserWithoutRelations instances representing the users.
     * :rtype: List[UserWithoutRelations]
     */
    public static listUsersApiPrismaUserGet(options?: Options<ListUsersApiPrismaUserGetData>) {
        return (options?.client ?? client).get<ListUsersApiPrismaUserGetResponse, ListUsersApiPrismaUserGetError>({
            ...options,
            url: '/api/prisma/user'
        });
    }
    
    /**
     * Create User
     */
    public static createUserApiPrismaUserPost(options: Options<CreateUserApiPrismaUserPostData>) {
        return (options?.client ?? client).post<CreateUserApiPrismaUserPostResponse, CreateUserApiPrismaUserPostError>({
            ...options,
            url: '/api/prisma/user'
        });
    }
    
    /**
     * Update User Byid
     * 根据用户ID更新用户信息。
     *
     * :param user: UserUpdateInput - 用户ID和更新后的用户信息。
     * :return: UserWithoutRelations - 更新后的用户信息。
     */
    public static updateUserByidApiPrismaUserPut(options: Options<UpdateUserByidApiPrismaUserPutData>) {
        return (options?.client ?? client).put<UpdateUserByidApiPrismaUserPutResponse, UpdateUserByidApiPrismaUserPutError>({
            ...options,
            url: '/api/prisma/user'
        });
    }
    
    /**
     * Get User
     */
    public static getUserApiPrismaUserUserIdGet(options: Options<GetUserApiPrismaUserUserIdGetData>) {
        return (options?.client ?? client).get<GetUserApiPrismaUserUserIdGetResponse, GetUserApiPrismaUserUserIdGetError>({
            ...options,
            url: '/api/prisma/user/{user_id}'
        });
    }
    
    /**
     * Update User
     */
    public static updateUserApiPrismaUserUserIdPut(options: Options<UpdateUserApiPrismaUserUserIdPutData>) {
        return (options?.client ?? client).put<UpdateUserApiPrismaUserUserIdPutResponse, UpdateUserApiPrismaUserUserIdPutError>({
            ...options,
            url: '/api/prisma/user/{user_id}'
        });
    }
    
    /**
     * Delete User
     */
    public static deleteUserApiPrismaUserUserIdDelete(options: Options<DeleteUserApiPrismaUserUserIdDeleteData>) {
        return (options?.client ?? client).delete<DeleteUserApiPrismaUserUserIdDeleteResponse, DeleteUserApiPrismaUserUserIdDeleteError>({
            ...options,
            url: '/api/prisma/user/{user_id}'
        });
    }
    
}